import { r as registerInstance, h, e as Host } from './index-1e49f12c.js';

const brxDividerCss = "brx-divider,[data-brx-global-styles~=hr] hr,hr.brx-divider{--divider-size:var(--surface-width-sm);border-color:var(--border-color);border-style:solid;border-width:0;border-top-width:var(--divider-size);display:block}brx-divider.content,[data-brx-global-styles~=hr] hr.content,hr.brx-divider.content{align-items:center;border:0;display:flex;justify-content:center}brx-divider.content::after,brx-divider.content::before,[data-brx-global-styles~=hr] hr.content::after,[data-brx-global-styles~=hr] hr.content::before,hr.brx-divider.content::after,hr.brx-divider.content::before{border-color:var(--border-color);border-style:solid;border-width:0;border-top-width:var(--divider-size);content:\"\";flex:1}brx-divider.content::after,[data-brx-global-styles~=hr] hr.content::after,hr.brx-divider.content::after{margin-left:var(--spacing-scale-base)}brx-divider.content::before,[data-brx-global-styles~=hr] hr.content::before,hr.brx-divider.content::before{margin-right:var(--spacing-scale-base)}brx-divider.vertical,brx-divider[vertical],brx-divider[orientation=vertical],[data-brx-global-styles~=hr] hr.vertical,[data-brx-global-styles~=hr] hr[vertical],[data-brx-global-styles~=hr] hr[orientation=vertical],hr.brx-divider.vertical,hr.brx-divider[vertical],hr.brx-divider[orientation=vertical]{align-self:stretch;border-right-width:var(--divider-size);border-top-width:0}brx-divider.vertical.content,brx-divider[vertical].content,brx-divider[orientation=vertical].content,[data-brx-global-styles~=hr] hr.vertical.content,[data-brx-global-styles~=hr] hr[vertical].content,[data-brx-global-styles~=hr] hr[orientation=vertical].content,hr.brx-divider.vertical.content,hr.brx-divider[vertical].content,hr.brx-divider[orientation=vertical].content{flex-direction:column}brx-divider.vertical.content::after,brx-divider.vertical.content::before,brx-divider[vertical].content::after,brx-divider[vertical].content::before,brx-divider[orientation=vertical].content::after,brx-divider[orientation=vertical].content::before,[data-brx-global-styles~=hr] hr.vertical.content::after,[data-brx-global-styles~=hr] hr.vertical.content::before,[data-brx-global-styles~=hr] hr[vertical].content::after,[data-brx-global-styles~=hr] hr[vertical].content::before,[data-brx-global-styles~=hr] hr[orientation=vertical].content::after,[data-brx-global-styles~=hr] hr[orientation=vertical].content::before,hr.brx-divider.vertical.content::after,hr.brx-divider.vertical.content::before,hr.brx-divider[vertical].content::after,hr.brx-divider[vertical].content::before,hr.brx-divider[orientation=vertical].content::after,hr.brx-divider[orientation=vertical].content::before{border-right-width:var(--divider-size);border-top-width:0;margin:0}brx-divider.inverted,brx-divider.dark-mode,brx-divider[dark-mode],[data-brx-global-styles~=hr] hr.inverted,[data-brx-global-styles~=hr] hr.dark-mode,[data-brx-global-styles~=hr] hr[dark-mode],hr.brx-divider.inverted,hr.brx-divider.dark-mode,hr.brx-divider[dark-mode]{--border-color:var(--pure-0)}brx-divider.dashed,brx-divider[dashed],[data-brx-global-styles~=hr] hr.dashed,[data-brx-global-styles~=hr] hr[dashed],hr.brx-divider.dashed,hr.brx-divider[dashed]{border-style:dashed}brx-divider.sm,brx-divider[size=sm],[data-brx-global-styles~=hr] hr.sm,[data-brx-global-styles~=hr] hr[size=sm],hr.brx-divider.sm,hr.brx-divider[size=sm]{--divider-size:var(--surface-width-sm)}brx-divider.md,brx-divider[size=md],[data-brx-global-styles~=hr] hr.md,[data-brx-global-styles~=hr] hr[size=md],hr.brx-divider.md,hr.brx-divider[size=md]{--divider-size:var(--surface-width-md)}brx-divider.lg,brx-divider[size=lg],[data-brx-global-styles~=hr] hr.lg,[data-brx-global-styles~=hr] hr[size=lg],hr.brx-divider.lg,hr.brx-divider[size=lg]{--divider-size:var(--surface-width-lg)}[data-brx-global-styles~=hr] hr,hr.brx-divider{--divider-padding:var(--spacing-scale-2x);margin:var(--divider-padding) 0}";

const BrxDivider = class {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.vertical = false;
    this.dashed = false;
    this.darkMode = false;
    this.size = 'sm';
  }
  render() {
    return (h(Host, null, h("slot", null)));
  }
};
BrxDivider.style = brxDividerCss;

export { BrxDivider as brx_divider };
