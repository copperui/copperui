import{r as e,c as i,h as t,a as r,g as a}from"./p-e5ae1b6e.js";import{T as o,i as s}from"./p-738842ad.js";import{f as l,g as b,b as c,e as h}from"./p-87f291fd.js";const d=class{constructor(t){e(this,t),this.brxChange=i(this,"brxChange",7),this.brxUpdate=i(this,"brxUpdate",7),this.brxFocus=i(this,"brxFocus",7),this.brxBlur=i(this,"brxBlur",7),this.syncInProgress=!1,this.onChange=e=>{e.preventDefault(),e.stopPropagation(),e.target.checked=this.currentChecked,this.setFocus(),this.setState(!this.currentChecked,!1)},this.onBlur=()=>{this.brxBlur.emit()},this.onFocus=()=>{this.brxFocus.emit()},this.label=void 0,this.name=void 0,this.checked=null,this.controlledChecked=o,this.indeterminate=!1,this.currentChecked=!1,this.currentIndeterminate=!1,this.disabled=!1,this.size="medium",this.valid=void 0,this.danger=void 0,this.invalid=void 0,this.state=void 0,this.darkMode=!1,this.hiddenLabel=!1,this.inputId=void 0,this.value="on",this.child=void 0,this.propParent=void 0,this.checkAllLabel="Selecionar tudo",this.uncheckAllLabel="Desselecionar tudo"}emitUpdateEvent(){this.brxUpdate.emit({checked:this.currentChecked,indeterminate:this.currentIndeterminate,value:this.value})}emitChangeEvent(e=this.currentChecked,i=this.currentIndeterminate){const{value:t}=this;this.brxChange.emit({checked:e,indeterminate:i,value:t})}syncCurrentChecked(){this.currentChecked=this.controlledChecked!==o?this.controlledChecked:this.checked}syncCurrentIndeterminate(){this.currentIndeterminate=this.indeterminate}syncCurrent(){this.syncCurrentChecked(),this.syncCurrentIndeterminate()}async getCurrentState(){return{value:this.value,checked:this.currentChecked,indeterminate:this.currentIndeterminate}}setState(e,i){return this.controlledChecked===o&&(this.currentChecked=e,this.currentIndeterminate=i),this.emitChangeEvent(e,i),Promise.resolve()}get parent(){const{propParent:e}=this;return""===e||e}get isParent(){return!!this.parent}get isChild(){return!!this.child}getCheckgroupChildren(){var e;const i=this.parent;if(i){const t="string"==typeof i?l(`brx-checkbox[child="${i}"]`):[],r=this.el.closest("brx-checkgroup");return[...t,...Array.from(null!==(e=null==r?void 0:r.querySelectorAll("brx-checkbox"))&&void 0!==e?e:[]).filter((e=>e!==this.el)).filter((e=>{const i=e.closest("brx-checkgroup"),t=i.parentElement.closest("brx-checkgroup");return i===r||t===r}))]}return[]}async getCheckgroupState(){const e=await Promise.all(this.getCheckgroupChildren().map((e=>e.getCurrentState()))),i=new Set(e.map((e=>e.indeterminate?"indeterminate":e.checked?"checked":"unchecked"))),t=i.has("checked")||i.has("indeterminate"),r=i.size>1;return{status:r?"indeterminate":t?"checked":"unchecked",isChecked:t,isIndeterminate:r}}syncCheckgroupParent(){!this.syncInProgress&&this.isParent&&(this.syncInProgress=!0,this.getCheckgroupState().then((({isChecked:e,isIndeterminate:i})=>{this.setState(e,i),this.syncInProgress=!1})))}syncCheckgroupChilds(){if(!this.syncInProgress&&this.isParent){if(this.syncInProgress=!0,!this.currentIndeterminate){const e=this.getCheckgroupChildren();for(const i of e)i.setState(this.currentChecked,!1)}this.syncInProgress=!1}}checkIsCheckboxParentChild(e){return this.getCheckgroupChildren().includes(e)}handleGlobalChange(e){const i=e.target,t=null==i?void 0:i.closest("brx-checkbox");t&&(this.checkIsCheckboxParentChild(t)?this.syncCheckgroupParent():t===this.el&&this.syncCheckgroupChilds())}async getNativeChecked(){var e;return null===(e=this.nativeInput)||void 0===e?void 0:e.checked}componentWillLoad(){void 0===this.inputId&&(this.inputId=b()),this.syncCurrent(),this.isParent&&this.syncCheckgroupParent()}setFocus(){this.nativeInput&&this.nativeInput.focus()}get labelText(){return this.parent?this.currentChecked&&!this.currentIndeterminate?this.uncheckAllLabel:this.checkAllLabel:this.label}render(){var e;return t(r,{role:"checkbox","data-checked":this.currentChecked,"aria-checked":`${this.currentChecked}`,"aria-hidden":this.disabled?"true":null,"data-indeterminate":this.currentIndeterminate},t("input",{type:"checkbox",id:this.inputId,disabled:this.disabled,checked:this.currentChecked,name:null!==(e=this.name)&&void 0!==e?e:this.inputId,indeterminate:this.currentIndeterminate,"aria-checked":`${this.currentChecked}`,onChange:this.onChange,onBlur:()=>this.onBlur(),onFocus:()=>this.onFocus(),ref:e=>this.nativeInput=e}),t("label",{htmlFor:this.inputId},this.labelText),t("slot",null))}get el(){return a(this)}static get watchers(){return{value:["emitUpdateEvent","emitChangeEvent"],currentChecked:["emitUpdateEvent","emitChangeEvent"],currentIndeterminate:["emitUpdateEvent","emitChangeEvent"],checked:["syncCurrentChecked"],controlledChecked:["syncCurrentChecked"],indeterminate:["syncCurrentIndeterminate"]}}};d.style='brx-checkbox{display:block;--checkbox-padding:var(--spacing-scale-base);--checkbox-size:24px;display:-ms-flexbox;display:flex}brx-checkbox+brx-checkbox{margin-top:var(--spacing-scale-base)}brx-checkbox input{margin:0;opacity:0;position:absolute}brx-checkbox input+label{cursor:pointer;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;margin-bottom:0;min-height:var(--checkbox-size);min-width:var(--checkbox-size);padding-left:calc(var(--spacing-scale-base) + var(--checkbox-size));position:relative}brx-checkbox input+label::before{background:var(--background-light);border:1px solid var(--border-color);border-radius:4px;content:"";height:var(--checkbox-size);left:0;position:absolute;width:var(--checkbox-size)}brx-checkbox input+label:empty{padding:0}brx-checkbox label{font-weight:var(--font-weight-medium)}brx-checkbox[hidden-label] label{padding-left:calc(var(--checkbox-size) + var(--surface-width-md) * 2);text-indent:-10000px;white-space:nowrap;width:0}brx-checkbox[data-checked] input+label::after{border:solid var(--selected);border-width:0 3px 3px 0;content:"";height:var(--icon-size-sm);left:8px;position:absolute;top:4px;-webkit-transform:rotate(45deg);transform:rotate(45deg);width:8px}brx-checkbox[data-indeterminate] input+label::before{--interactive-rgb:var(--color-rgb);background:var(--selected);border-color:var(--selected)}brx-checkbox[data-indeterminate] input:hover:not(:disabled)+label::before{--interactive-rgb:var(--color-dark-rgb)}brx-checkbox[data-indeterminate][data-checked] input+label::after{border-color:var(--background-light);border-width:0 0 3px;top:2px;-webkit-transform:none;transform:none}brx-checkbox[invalid] input:focus-visible+label::before,brx-checkbox[invalid][focus-visible] input+label::before,brx-checkbox[invalid][data-checked] input:focus-visible+label::before,brx-checkbox[invalid][data-checked][focus-visible] input+label::before,brx-checkbox[state~=invalid] input:focus-visible+label::before,brx-checkbox[state~=invalid][focus-visible] input+label::before,brx-checkbox[state~=invalid][data-checked] input:focus-visible+label::before,brx-checkbox[state~=invalid][data-checked][focus-visible] input+label::before{--border-color:var(--focus-color)}brx-checkbox[invalid][data-checked] input+label::before,brx-checkbox[state~=invalid][data-checked] input+label::before{--border-color:var(--danger)}brx-checkbox[invalid] input+label::before,brx-checkbox[state~=invalid] input+label::before{--border-color:var(--danger)}brx-checkbox[valid] input:focus-visible+label::before,brx-checkbox[valid][focus-visible] input+label::before,brx-checkbox[valid][data-checked] input:focus-visible+label::before,brx-checkbox[valid][data-checked][focus-visible] input+label::before,brx-checkbox[state~=valid] input:focus-visible+label::before,brx-checkbox[state~=valid][focus-visible] input+label::before,brx-checkbox[state~=valid][data-checked] input:focus-visible+label::before,brx-checkbox[state~=valid][data-checked][focus-visible] input+label::before{--border-color:var(--focus-color)}brx-checkbox[valid][data-checked] input+label::before,brx-checkbox[state~=valid][data-checked] input+label::before{--border-color:var(--success)}brx-checkbox[valid] input+label::before,brx-checkbox[state~=valid] input+label::before{--border-color:var(--success)}brx-checkbox[size=small] input+label{line-height:var(--spacing-scale-2xh);min-height:var(--spacing-scale-2xh)}brx-checkbox[size=small] input+label::before{height:var(--spacing-scale-2xh);width:var(--spacing-scale-2xh)}brx-checkbox[size=small][data-checked] input+label::after{border-width:0 2px 2px 0;height:var(--icon-size-sm);left:7px;top:6px;width:6px}brx-checkbox[size=small][data-checked][data-indeterminate] input+label::after{border-color:var(--background-light);border-width:0 0 3px;top:2px;-webkit-transform:none;transform:none}brx-checkbox input:focus-visible+label::before,brx-checkbox[focus-visible] input+label::before,brx-checkbox[data-checked] input:focus-visible+label::before,brx-checkbox[data-checked][focus-visible] input+label::before{border-color:var(--focus) !important;-webkit-box-shadow:0 0 0 var(--surface-width-md) var(--focus);box-shadow:0 0 0 var(--surface-width-md) var(--focus);outline:none}brx-checkbox input:invalid+label::before{--border-color:var(--danger)}brx-checkbox input:hover:not(:disabled)+label::before{--interactive-rgb:var(--interactive-light-rgb);background-image:-webkit-gradient(linear, left top, left bottom, from(rgba(var(--interactive-rgb), var(--hover))), to(rgba(var(--interactive-rgb), var(--hover))));background-image:linear-gradient(rgba(var(--interactive-rgb), var(--hover)), rgba(var(--interactive-rgb), var(--hover)))}brx-checkbox:not(:is([disabled],:disabled)) input:disabled+label{cursor:not-allowed;opacity:var(--disabled)}brx-checkbox:not(:is([disabled],:disabled)) input:disabled+label *{pointer-events:none}brx-checkbox.inverted,brx-checkbox.inverted label,brx-checkbox.dark-mode,brx-checkbox.dark-mode label,brx-checkbox[dark-mode],brx-checkbox[dark-mode] label{color:var(--color-dark)}';const n=class{constructor(t){e(this,t),this.brxFocus=i(this,"brxFocus",7),this.brxBlur=i(this,"brxBlur",7),this.brxChange=i(this,"brxChange",7),this.brxUpdate=i(this,"brxUpdate",7),this.syncCheckedFromRadioGroup=async()=>{const e=this.radioGroup;if(e){const i=await e.getCurrentValue()===this.value;this.currentChecked=i,this.nativeInputChecked=i}},this.syncCheckedFromNative=()=>{this.setChecked(this.nativeInputChecked)},this.onFocus=()=>{this.brxFocus.emit()},this.onBlur=()=>{this.brxBlur.emit()},this.onChange=e=>{e.preventDefault();const i=this.nativeInputChecked;this.nativeInputChecked=this.currentChecked,this.setChecked(i)},this.checked=void 0,this.controlledChecked=o,this.currentChecked=!1,this.buttonTabindex=-1,this.name=void 0,this.disabled=!1,this.value=void 0,this.label=void 0,this.inputId=void 0}get nativeInput(){return c("input",this.el)}get nativeInputChecked(){var e,i;return null!==(i=null===(e=this.nativeInput)||void 0===e?void 0:e.checked)&&void 0!==i&&i}set nativeInputChecked(e){this.nativeInput&&(this.nativeInput.checked=e)}get radioGroup(){var e;return null!==(e=this.el.closest("brx-radio-group"))&&void 0!==e?e:null}get isStandaloneFamilyControlled(){return l(`brx-radio[name="${this.name}"]`).some((e=>s(e.controlledChecked)))}emitChange(e=this.currentChecked,i=!1){(e||i)&&this.brxChange.emit({value:this.value,checked:e})}syncCurrentChecked(){this.currentChecked=this.controlledChecked!==o?this.controlledChecked:this.checked}handleStateChange(){this.emitChange()}handleCurrentCheckedChange(){this.nativeInputChecked=this.currentChecked}setChecked(e=!1){s(this.controlledChecked)||this.radioGroup||this.isStandaloneFamilyControlled?this.emitChange(e):this.currentChecked=e}emitUpdateEvent(){this.brxUpdate.emit({value:this.value,checked:this.currentChecked})}async setFocus(){this.el.focus()}async setButtonTabindex(e){this.buttonTabindex=e}async getCurrentState(){return{value:this.value,checked:this.currentChecked}}handleGlobalRadioChange(e){const i=e.target;(null==i?void 0:i.closest("brx-radio"))&&(this.nativeInputChecked=this.currentChecked,this.radioGroup||h((()=>{this.syncCheckedFromNative()})))}handleGlobalRadioGroupUpdate(e){const i=e.target,t=null==i?void 0:i.closest("brx-radio-group");t&&t===this.radioGroup&&this.syncCheckedFromRadioGroup()}connectedCallback(){this.syncCheckedFromRadioGroup()}componentWillLoad(){this.inputId||(this.inputId=b()),this.syncCurrentChecked()}render(){const e=`${this.inputId}-lbl`;return t(r,{role:"radio",onBlur:this.onBlur,onFocus:this.onFocus,disabled:this.disabled,"aria-labelledby":e,tabindex:this.buttonTabindex,"data-checked":this.currentChecked,"aria-checked":`${this.currentChecked}`,"aria-hidden":this.disabled?"true":null},t("input",{type:"radio",name:this.name,id:this.inputId,value:this.value,disabled:this.disabled,onChange:this.onChange,checked:this.currentChecked}),t("label",{htmlFor:this.inputId,id:e},this.label))}get el(){return a(this)}static get watchers(){return{checked:["syncCurrentChecked"],controlledChecked:["syncCurrentChecked"],value:["handleStateChange","emitUpdateEvent"],currentChecked:["handleStateChange","handleCurrentCheckedChange","emitUpdateEvent"]}}};n.style='brx-radio{--radio-size:24px;--radio-bullet-size:16px;--radio-bullet-position:calc((var(--radio-size) - var(--radio-bullet-size)) * 0.5);display:block}brx-radio+brx-radio{margin-top:var(--spacing-scale-base)}brx-radio input{opacity:0;position:absolute}brx-radio input+label{cursor:pointer;display:inline-block;margin-bottom:0;min-height:var(--radio-size);min-width:var(--radio-size);padding-left:calc(var(--spacing-scale-base) + var(--radio-size));position:relative}brx-radio input+label::before{background:var(--background);border:1px solid var(--border-color);border-radius:50%;content:"";height:var(--radio-size);left:0;position:absolute;top:-1px;width:var(--radio-size)}brx-radio input+label:empty{padding:0}brx-radio input+label:empty::before{top:0}brx-radio label{font-weight:var(--font-weight-medium)}brx-radio input:checked+label::after{background:var(--selected);border:7px solid var(--selected);border-radius:50%;content:"";height:var(--radio-bullet-size);left:var(--radio-bullet-position);position:absolute;right:0;top:calc(var(--radio-bullet-position) - 1px);width:var(--radio-bullet-size)}brx-radio input:checked+label:empty::after{top:var(--radio-bullet-position)}brx-radio.is-valid input+label::before,brx-radio.valid input+label::before,brx-radio[valid] input+label::before,brx-radio[state=valid] input+label::before{border-color:var(--success)}brx-radio.is-invalid input+label::before,brx-radio.invalid input+label::before,brx-radio[invalid] input+label::before,brx-radio[state=invalid] input+label::before{border-color:var(--danger)}brx-radio.is-small input+label,brx-radio.small input+label,brx-radio[small] input+label,brx-radio[size=small] input+label{line-height:var(--spacing-scale-2xh);min-height:var(--spacing-scale-2xh)}brx-radio.is-small input+label::before,brx-radio.small input+label::before,brx-radio[small] input+label::before,brx-radio[size=small] input+label::before{height:var(--spacing-scale-2xh);width:var(--spacing-scale-2xh)}brx-radio.is-small input:checked+label::after,brx-radio.small input:checked+label::after,brx-radio[small] input:checked+label::after,brx-radio[size=small] input:checked+label::after{border-width:4px;height:10px;width:10px}brx-radio input:invalid+label::before{border-color:var(--danger)}brx-radio input:focus-visible:checked+label::before,brx-radio input:focus-visible+label::before,brx-radio input.focus-visible:checked+label::before,brx-radio input.focus-visible+label::before{border-color:var(--focus) !important;-webkit-box-shadow:0 0 0 var(--surface-width-md) var(--focus);box-shadow:0 0 0 var(--surface-width-md) var(--focus);outline:none}brx-radio input:hover:not(:disabled)+label::before{background-image:-webkit-gradient(linear, left top, left bottom, from(rgba(var(--interactive-rgb), var(--hover))), to(rgba(var(--interactive-rgb), var(--hover))));background-image:linear-gradient(rgba(var(--interactive-rgb), var(--hover)), rgba(var(--interactive-rgb), var(--hover)))}brx-radio.inverted,brx-radio.inverted label,brx-radio.dark-mode,brx-radio.dark-mode label,brx-radio[dark-mode],brx-radio[dark-mode] label{color:var(--color-dark)}';export{d as brx_checkbox,n as brx_radio}