@mixin list-configs {
  // @include list-tokens;
  @include list-default;
  @include list-item;
  // Lista dentro de lista
  @include list-in-list;
  @include list-header;
  @include list-data-lines;
}

@mixin list-header {
  brx-list-header {
    display: block;
  }
}

// @mixin list-tokens {
// }

// Item da lista complexa
// É formado por: [support] content [support]
@mixin list-item {
  background-color: var(--background);

  brx-item {
    @include list-item-config;
  }
}

@mixin list-item-config {
  text-align: left;
  width: 100%;

  @include icon {
    text-align: center;
  }

  > .content {
    align-items: var(--spacing-vertical-top);
    display: flex;

    > .content {
      flex: 1;
    }
  }

  .content:hover brx-button {
    background-image: linear-gradient(rgba(var(--interactive-rgb), var(--hover)), rgba(var(--interactive-rgb), var(--hover)));
  }

  &[data-toggle] {
    cursor: pointer;

    ~ brx-list {
      brx-item {
        padding: var(--spacing-scale-base) var(--spacing-scale-3x);
      }
    }
  }
}

@mixin list-checkbox-radio-config {
  --interactive-rgb: var(--rgb-primary-default);

  input {
    &:hover:not(:disabled) {
      + label::before {
        background-image: linear-gradient(rgba(var(--interactive-rgb), var(--hover)), rgba(var(--interactive-rgb), var(--hover)));
      }
    }
  }
}

// Lista dentro de outra lista
@mixin list-in-list {
  & & {
    overflow: hidden;
    transition: all 400ms ease-in-out;
  }
}

@mixin list-header {
  brx-list-header {
    align-items: v(spacing-vertical-center);
    display: flex;
    font-size: v(font-size-scale-base);
    font-weight: v(font-weight-bold);
    justify-content: space-between;
    padding: v(spacing-scale-base) v(spacing-scale-2x);
  }
}

@mixin list-default {
  // @include list;
  // Cabeçalho da lista complexa

  &.horizontal,
  &[horizontal],
  &[orientation='horizontal'] {
    display: flex;
    flex-wrap: wrap;

    > brx-list-header {
      flex-grow: 1;
      width: 100%;

      + brx-divider {
        @include list-header-divider-config;
      }
    }

    > brx-item,
    > .group {
      + brx-divider {
        @include list-group-divider-config;
      }

      @include list-horizontal-group;
    }

    &[data-toggle] > brx-item,
    &.toggle > brx-item {
      display: block;
    }
  }
}

@mixin list-horizontal-group {
  flex: 1;
  height: auto;
  min-height: 56px;
  width: auto;

  &.one-line,
  &[one-line],
  &[lines='one'] {
    > .content {
      height: 56px;
    }
  }

  &.two-lines,
  &[two-lines],
  &[lines='two'] {
    > .content {
      height: 72px;
    }
  }

  &.three-lines,
  &[three-lines],
  &[lines='three'] {
    > .content {
      height: 6em;
    }
  }
}

@mixin list-group-divider-config {
  border-width: 0 1px 0 0;
  width: 1px;
}

@mixin list-header-divider-config {
  border-top: 1px solid var(--border-color);
  width: 100%;
}

@mixin lista-data-lines-content {
  height: auto;
  overflow: hidden;
  padding: 0 v(spacing-scale-2x);
  text-overflow: unset;
  white-space: initial;
}

@mixin list-data-lines {
  &[data-one-line] brx-item,
  &[data-one-line] & brx-item,
  &[lines='one'] brx-item,
  &[lines='one'] & brx-item {
    height: 2em;

    .content {
      @include lista-data-lines-content;
    }
  }

  &[data-two-lines] brx-item,
  &[data-two-lines] & brx-item,
  &[lines='two'] brx-item,
  &[lines='two'] & brx-item {
    height: 4em;

    .content {
      @include lista-data-lines-content;
    }
  }

  &[data-three-lines] brx-item,
  &[data-three-lines] & brx-item,
  &[lines='three'] brx-item,
  &[lines='three'] & brx-item {
    height: 6em;

    .content {
      @include lista-data-lines-content;
    }
  }
}
