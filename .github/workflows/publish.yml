# based on https://github.com/telekom/scale/blob/cb64d01d6da7b16998fdd8df3f36141a00991066/.github/workflows/publish.yml

name: publish to NPM
on:
  push:
    branches:
      - release

jobs:
  # deploy-storybook:
  #   runs-on: ubuntu-20.04
  #   steps:
  #     - uses: actions/checkout@v3

  #     - name: Configure CI Git User
  #       run: |
  #         git config --global user.name 'github-actions-bot'
  #         git config --global user.email 'support+actions@github.com'
  #         git remote set-url origin https://git:${{ secrets.GITHUB_TOKEN }}@github.com/copperui/copperui.git

  #     - name: Setup Node
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: 18

  #     - name: Install yarn v3
  #       run: corepack enable && corepack prepare yarn@stable --activate

  #     - name: Restore Lerna
  #       id: yarn-cache
  #       uses: actions/cache@v3
  #       with:
  #         path: |
  #           node_modules
  #           */*/node_modules
  #         key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}

  #     - name: Install project dependencies
  #       if: steps.yarn-cache.outputs.cache-hit != 'true'
  #       run: yarn

  #     - name: Build Components
  #       run: |
  #         yarn workspace @copperui/core build

  #     - name: Build Storybook
  #       run: |
  #         yarn workspace @copperui/core storybook:build --quiet

  #     - name: Deploy Storybook
  #       run: |
  #         yarn workspace @copperui/core storybook:deploy deploy

  publish:
    runs-on: ubuntu-20.04
    environment: RELEASE
    steps:
      - uses: actions/checkout@v3

      - name: Authenticate with Registry
        run: |
          yarn logout
          touch .npmrc
          echo "registry=https://registry.npmjs.org/" >> .npmrc
          echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> .npmrc
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install yarn v3
        run: corepack enable && corepack prepare yarn@stable --activate

      - name: Restore Lerna
        id: yarn-cache
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            */*/node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}

      - name: Install project dependencies
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn --immutable

      - name: Build Components
        run: |
          yarn workspace @copperui/core build

      - name: Build React Proxy
        run: |
          yarn workspace @copperui/react build

      - name: Publish to NPM
        run: yarn run publish
        env:
          YARN_NPM_PUBLISH_REGISTRY: 'https://registry.npmjs.org'
          YARN_NPM_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
